# Nginx CDN Configuration
# Optimizes static asset delivery with caching and compression

# Upstream backend API
upstream glossary_api {
    server 127.0.0.1:9123;
    keepalive 32;
}

# Cache configuration
proxy_cache_path /var/cache/nginx/glossary levels=1:2 keys_zone=glossary_cache:10m max_size=1g inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name yourglossary.com www.yourglossary.com;

    # Redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name yourglossary.com www.yourglossary.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/yourglossary.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourglossary.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;
    gzip_disable "msie6";

    # Brotli compression (if nginx has brotli module)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # Root directory
    root /var/www/glossary-app/src/frontend/dist;
    index index.html;

    # ========================================
    # Static Assets with Aggressive Caching
    # ========================================

    # JavaScript and CSS with hash in filename (immutable)
    location ~* ^/assets/.*\.(js|css)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;

        # Enable Brotli if available
        gzip_static on;
        # brotli_static on;
    }

    # Images with hash
    location ~* ^/assets/images/.*\.(png|jpg|jpeg|gif|svg|ico|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;

        gzip_static on;
    }

    # Fonts
    location ~* ^/assets/fonts/.*\.(woff2?|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
        access_log off;
    }

    # Generic static assets (fallback)
    location ~* \.(png|jpg|jpeg|gif|svg|ico|webp|woff2?|ttf|eot|otf)$ {
        expires 30d;
        add_header Cache-Control "public";
        access_log off;
    }

    # ========================================
    # API Proxy with Caching
    # ========================================

    location /api/ {
        proxy_pass http://glossary_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Caching for GET requests
        proxy_cache glossary_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        proxy_cache_lock on;

        # Add cache status header
        add_header X-Cache-Status $upstream_cache_status;

        # Don't cache authenticated requests or mutations
        proxy_no_cache $http_authorization;
        proxy_no_cache $request_method != GET;
    }

    # Health checks (no caching)
    location /health {
        proxy_pass http://glossary_api;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass 1;
        proxy_no_cache 1;
        access_log off;
    }

    # ========================================
    # Frontend SPA (React Router)
    # ========================================

    location / {
        try_files $uri $uri/ /index.html;

        # index.html should not be cached
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }
    }

    # ========================================
    # Additional Optimizations
    # ========================================

    # Disable access log for assets
    location ~* ^/assets/ {
        access_log off;
    }

    # robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # favicon.ico
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    # ========================================
    # Error Pages
    # ========================================

    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/glossary-app/src/frontend/dist;
    }
}

# ========================================
# CDN Subdomain (Optional)
# ========================================

server {
    listen 443 ssl http2;
    server_name cdn.yourglossary.com;

    # SSL Configuration (same as main)
    ssl_certificate /etc/letsencrypt/live/yourglossary.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourglossary.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;

    # CORS for CDN
    add_header Access-Control-Allow-Origin "https://yourglossary.com" always;
    add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
    add_header Access-Control-Allow-Headers "*" always;

    # Only serve static assets
    root /var/www/glossary-app/src/frontend/dist;

    location /assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        gzip_static on;
    }

    # Block everything else
    location / {
        return 404;
    }
}

# ========================================
# Rate Limiting
# ========================================

limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=search_limit:10m rate=30r/m;

# Apply to API endpoints
# Add this inside location /api/:
# limit_req zone=api_limit burst=20 nodelay;

# Apply to search endpoints
# location /api/search/ {
#     limit_req zone=search_limit burst=10 nodelay;
#     proxy_pass http://glossary_api;
# }
