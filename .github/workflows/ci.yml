name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      working-directory: src/backend

    - name: Download spaCy models
      run: |
        python -m spacy download en_core_web_sm
        python -m spacy download de_core_news_sm

    - name: Run linter (flake8)
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/backend --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/backend --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true

    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short --junit-xml=test-results.xml
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results.xml

    - name: Test Summary
      uses: test-summary/action@v2
      if: always()
      with:
        paths: test-results.xml

  lint-frontend:
    name: Lint Frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: src/frontend

    - name: Run ESLint
      run: npm run lint
      working-directory: src/frontend
      continue-on-error: true

    - name: Run TypeScript type check
      run: npm run typecheck
      working-directory: src/frontend

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: lint-frontend

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: src/frontend/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: src/frontend

    - name: Build frontend
      run: npm run build
      working-directory: src/frontend
      env:
        CI: true

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: src/frontend/dist
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
      continue-on-error: true

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
